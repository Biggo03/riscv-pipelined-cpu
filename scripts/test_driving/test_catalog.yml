regressions:
    component_smoke:
      - alu
      - adder
      - flop
      - reduce
      - imm_extend
      - reg_file
      - csr_regfile
      - csr_alu
      - icache_l1
      - instr_mem
      - data_mem
      - instr_cache_ctlr
      - instr_cache_set_multi_tb
      - main_decoder
      - alu_decoder
      - width_decoder
      - write_decoder
      - hazard_unit

    system_smoke:
      - alu_branch_jalr_test
      - branch_shift_test
      - branch_shiftu_test
      - mem_ext_logic_test
      - branch_cache_stress_test
      - bp_rollback_icache_overlap
      - full_test_one
      - full_test_two

tests:
    ####################################
    #          basic asm tests         #
    ####################################
    alu_branch_jalr_test:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    branch_shift_test:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    branch_shiftu_test:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    mem_ext_logic_test:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    branch_cache_stress_test:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    bp_rollback_icache_overlap:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    full_test_one:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    full_test_two:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, asm]

    ####################################
    #       basic c programs           #
    ####################################
    sum:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, c_program]

    ####################################
    #      benchmark programs          #
    ####################################
    dhrystone:
      tb: riscv_top_tb.sv
      defines: []
      tags: [system, slow, c_program]

    ####################################
    #         control modules          #
    ####################################
    main_decoder:
      tb: main_decoder_tb.sv
      defines: []
      tags: [unit, fast]

    alu_decoder:
      tb: alu_decoder_tb.sv
      defines: []
      tags: [unit, fast]

    width_decoder:
      tb: width_decoder_tb.sv
      defines: []
      tags: [unit, fast]

    write_decoder:
      tb: write_decoder_tb.sv
      defines: []
      tags: [unit, fast]

    hazard_unit:
      tb: hazard_unit_tb.sv
      defines: []
      tags: [unit, fast]

    ####################################
    #          branching modules       #
    ####################################
    branching_buffer:
      tb: branching_buffer_tb.sv
      defines: []
      tags: [subsystem, slow]

    branch_resolution_unit:
      tb: branch_resolution_unit_tb.sv
      defines: []
      tags: [unit, fast]

    ghr:
      tb: ghr_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    local_predictor:
      tb: local_predictor_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    branch_control_unit:
      tb: branch_control_unit_tb.sv
      defines: []
      tags: [unit, fast]

    ####################################
    #          memory modules          #
    ####################################
    icache_l1:
      tb: icache_l1_dir_tb.sv
      defines: []
      tags: [subsystem, fast]

    instr_mem:
      tb: instr_mem_tb.sv
      defines: []
      tags: [unit, fast]

    data_mem:
      tb: data_mem_tb.sv
      defines: []
      tags: [unit, fast]

    instr_cache_ctlr:
      tb: instr_cache_ctlr_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    instr_cache_set_multi_tb:
      tb: instr_cache_set_multi_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    ####################################
    #         building blocks          #
    ####################################
    alu:
      tb: alu_tb.sv
      defines: []
      tags: [unit, fast]

    adder:
      tb: adder_tb.sv
      defines: []
      tags: [unit, fast]

    flop:
      tb: flop_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    reduce:
      tb: reduce_tb.sv
      defines: []
      tags: [unit, fast]

    imm_extend:
      tb: imm_extend_tb.sv
      defines: []
      tags: [unit, fast]

    reg_file:
      tb: reg_file_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    csr_regfile:
      tb: csr_regfile_tb.sv
      defines: []
      tags: [unit, sequential, fast]

    csr_alu:
      tb: csr_alu_tb.sv
      defines: []
      tags: [unit, fast]
